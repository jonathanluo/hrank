<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.oracle.coherence</groupId>
    <artifactId>coherence-examples-parent</artifactId>
    <version>12.2.1-3-0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>coherence-examples</artifactId>
  <name>Coherence Examples Distribution</name>
  <packaging>jar</packaging>

  <dependencies>
    <dependency>
      <groupId>com.oracle.coherence</groupId>
      <artifactId>coherence-examples-common</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.oracle.coherence</groupId>
      <artifactId>coherence-examples-java</artifactId>
      <version>${project.version}</version>
      <classifier>distribution</classifier>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>com.oracle.coherence</groupId>
      <artifactId>coherence-examples-dotnet</artifactId>
      <version>${project.version}</version>
      <classifier>distribution</classifier>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>com.oracle.coherence</groupId>
      <artifactId>coherence-examples-cpp</artifactId>
      <version>${project.version}</version>
      <classifier>distribution</classifier>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>com.oracle.coherence</groupId>
      <artifactId>coherence-examples-rest</artifactId>
      <version>${project.version}</version>
      <classifier>distribution</classifier>
      <type>zip</type>
    </dependency>
  </dependencies>

  <build>
    <plugins>
     <!-- Dependency Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/generated-resources</outputDirectory>
              <overWriteReleases>true</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
              <excludeTransitive>true</excludeTransitive>
              <includeScope>compile</includeScope>
              <excludes>**/META-INF/**</excludes>
              <excludeArtifactIds>coherence-examples-common</excludeArtifactIds>
            </configuration>
          </execution>
          <execution>
            <id>copy-commons</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/generated-resources/resource</outputDirectory>
              <overWriteReleases>true</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
              <excludeTransitive>true</excludeTransitive>
              <includeScope>compile</includeScope>
              <excludes>**/META-INF/**</excludes>
              <includeArtifactIds>coherence-examples-common</includeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Build Helper Plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-resource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.build.directory}/generated-resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- maven-jar-plugin - Overridden to not require a META-INF?MANIFEST.MF file -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.plugin.version}</version>
        <configuration combine.self="override">
          <useDefaultManifestFile>true</useDefaultManifestFile>
        </configuration>
      </plugin>

      <!-- License Plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>first</id>
            <goals>
              <goal>update-file-header</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <inceptionYear>2000</inceptionYear>
              <organizationName>Oracle and/or its affiliates. All rights reserved.</organizationName>
              <licenseName>oracle</licenseName>
              <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
              <licenseResolver>${project.baseUri}/src/license</licenseResolver>
              <descriptionTemplate>${project.basedir}/src/license/oracle/description.ftl
              </descriptionTemplate>
              <roots>
                <root>${project.build.directory}/classes/java/src</root>
                <root>${project.build.directory}/classes/cpp/</root>
                <root>${project.build.directory}/classes/dotnet</root>
              </roots>
              <includes>
                <include>**/*.java</include>
                <include>**/*.cs</include>
                <include>**/*.cpp</include>
                <include>**/*.hpp</include>
              </includes>
              <sectionDelimiter>---</sectionDelimiter>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- fix up annoying CRLF added by licence-maven-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>ant-test</id>
            <phase>prepare-package</phase>
            <configuration>
              <tasks>
                <fixcrlf srcdir="${project.build.directory}/classes/" eol="unix" includes="**/*.java **/*.cs **/*.cpp **/*.hpp" />
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
