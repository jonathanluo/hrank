function set_env
{
if [ -z $COHERENCE_HOME ]; then
    echo COHERENCE_HOME is not set!
    echo set COHERENCE_HOME to a Coherence 12.2.1 or later installation.
    exit 1
fi

if [ -z $JAVA_HOME ]; then
    echo JAVA_HOME is not set!
    echo set JAVA_HOME to a JDK 1.8 or greater installation.
    exit 1
fi

EXAMPLE_PATH_BEGIN=com/tangosol/examples
CLASSES_DIR=$EXAMPLES_DIR/classes

#$EXAMPLE is set in function set_example_env
EXAMPLE_PATH=$EXAMPLE_PATH_BEGIN/$EXAMPLE
EXAMPLE_CONFIG_DIR=$EXAMPLES_DIR/resource/$EXAMPLE

POF_PATH=$EXAMPLE_PATH_BEGIN/pof
CONFIG_DIR=$EXAMPLES_DIR/resource/config

# Check if SSL Enabled for federation example
if [ "$SSL" == "true" -a "$EXAMPLE" == "federation" ] ; then
   SUFFIX="-ssl"
fi

# run script uses client config (if available) but run-proxy and run-cache-server do not
if [[ $0 == *run ]] && [[ -e $EXAMPLE_CONFIG_DIR/client-cache-config.xml ]]
then
    CACHE_CONFIG_FILE_NAME=client-cache-config.xml
else
    CACHE_CONFIG_FILE_NAME=examples-cache-config${SUFFIX}.xml
fi

# if config is found in examples resource directory, use it instead of basic config
if [ -e $EXAMPLE_CONFIG_DIR/$CACHE_CONFIG_FILE_NAME ]; then
    CACHE_CONFIG=$EXAMPLE_CONFIG_DIR/$CACHE_CONFIG_FILE_NAME
else
    CACHE_CONFIG=$CONFIG_DIR/$CACHE_CONFIG_FILE_NAME
fi

CP=$EXAMPLE_CONFIG_DIR:$CONFIG_DIR:$COHERENCE_HOME/lib/coherence.jar:$COHERENCE_HOME/lib/jline.jar:$CLASSES_DIR

COH_OPTS="$COH_OPTS -cp $CP"
COH_OPTS="$COH_OPTS -Dcoherence.cacheconfig=$CACHE_CONFIG"
# using non-default port to prevent accidentally joining other clusters
COH_OPTS="$COH_OPTS -Djava.net.preferIPv4Stack=true -Dcoherence.wka=127.0.0.1 -Dcoherence.clusterport=5555 -Dcoherence.distributed.persistence.base.dir=$EXAMPLES_DIR/persistence-data"
}
